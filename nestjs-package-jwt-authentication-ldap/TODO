# TODO

☐ EndPoints
  ☐ Auth
    ☐ ldapLogin
      ✔ /auth/login-ldap @done(20-11-30 10:59)
      ✔ change endpoint to `/auth/login` @done(20-11-30 12:06)
    ☐ ldapRefreshToken
      ✔ /auth/refresh-token-ldap @done(20-11-30 11:00)
      ✔ change endpoint to `/auth/refresh-token` @done(20-11-30 12:06)
    ✔ revokeUserRefreshToken @done(20-11-30 11:04)
      ✔ /revoke-refresh-token @done(20-11-30 11:03)
    ✔ logOut @done(20-11-30 11:04)
      ✔ /auth/logout @done(20-11-30 11:04)

    /auth/revoke-refresh-token

  ☐ logOut


☐ add user but fails group
☐ add a group to a menber that is in that group crashb and we can't see the exception
☐ addMember(s)
  ☐ @critical addMembers foi feito a correr o import da shell porque pelo ldapjs era mais lento. Depois tem de se verificar se continua ou não. 
  ☐ @critical entao se calhar e melhor ficar com addMembers (array simples) e um importMembers() q usa esse metodo


c3@c3:/usr/share/backend$ sudo npm run debug

now 
npm run start:debug starts working in consumer app.....

Debugger attached.


☐ TODAY
  ☐ convert roles to CONSTANT ex SERVER_OPERATORS
  ☐ use @Roles(UserRoles.ADMINISTRATOR) @UseGuards(RolesAuthGuard) roles in every endpoint
  ☐ initCache have role?
  ☐ cacheStatus endpoint
  ☐ temove all user module stuff and @critical local.strategy.ts to
  ☐ return init cache before use endPoint in ldapGetUserRecords
  ☐ memoryUsage helper function
  ☐ remove group
  ☐ update password
  ☐ roles, all endpoint protected with roles, ONLY login, logout, and changeUser profile or change user record may PASS
  ☐ 

ldapGetUserRecords  is same has -> return init cache before use endPoint
  {
    "total": 110022,
    "elapsedTime": "47.740",
    "memoryUsage": {
      "rss": "465.38 MB -> Resident Set Size - total memory allocated for the process execution",
      "heapTotal": "366.74 MB -> total size of the allocated heap",
      "heapUsed": "198.43 MB -> actual memory used during the execution",
      "external": "1.57 MB -> V8 external memory"
    },
    "status": 0
  }